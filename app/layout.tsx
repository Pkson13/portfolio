import type { Metadata } from "next";
import { Geist, Bebas_Neue } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "next-themes";
import Navbar from "@/components/navbar/Navbar";
import ThemeColorMeta from "@/components/ThemeColorMeta";
import "@/lib/gsap_setup";
import ClientWrapper from "@/components/ClientWrapper";
// import CursorFollower from "@/components/cursor_follower/CursorFollower";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const bebasNeue = Bebas_Neue({
  variable: "--font-bebas-neue",
  weight: ["400"],
});

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const viewport = {
  themeColor: [
    { media: "(prefers-color-scheme: light)", color: "#ffffff" },
    { media: "(prefers-color-scheme: dark)", color: "#0d0d0d" },
  ],
};
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${bebasNeue.variable} w-screen max-w-screen overflow-x-hidden antialiased`}
      >
        <ThemeProvider attribute="class" enableColorScheme>
          <ClientWrapper>
            <ThemeColorMeta />
            <Navbar />
            {/* <Morpsvg /> */}
            {/* <CursorFollower /> */}

            {children}
          </ClientWrapper>
        </ThemeProvider>
      </body>
    </html>
  );
}
